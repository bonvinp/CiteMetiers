<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAIy4AACMuAAAAAAAAAAA
        AABAREQCQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQEQEREBEBERARAREQEQEREBEBERARAREQEQEREBF1jYwPq+fkB9v//AfX/
        /wH0//8B9P//AfT//wH1//8B9f//Af3//wH2//8B9f//AfH//wFeY2MDQEREBEBERARAREQEQEREBEBE
        RARAREQEQEREBEBERARAREQDQEREA0BERARAREQEQEREBEBERARAREQEP0NDBFddXQOBiYkCCQoKGgUF
        BTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFNAUFBTIFBQUzBQUFMwoLCxjp9/cBV1xcAz9D
        QwRAREQEQEREBEBERARAREQEQEREBEBERANAREQDQEREBEBERARAREQEQEREBEBERAS5xcUBDQ4OEwMD
        A1cCAgJxAwMDWwMDA1gDAwNYAwMDWAMDA1gDAwNYAwMDWAMDA1cCAgKAAgICmwMDA1cCAgKUAQICrwMD
        A2MODg4Ss76+AUBERARAREQEQEREBEBERARAREQEQEREA0BERANAREQEQEREBEBERARDR0cEgIiIAgUF
        BTACAgJyBAQERBUXFwz///8A////Af///wH///8B////Af///wH///8B////ABocHAkCAwNrBwgIIgMD
        A1wCAgKcAgICpwICAo8FBgYvg4uLAkNHRwRAREQEQEREBEBERARAREQDQEREA0BERARAREQEQ0hIBFZc
        XAMEBARDAgICbwMEBEkGBwcpFBUVDU9UVAP///8A////AP///wD///8A////AP///wB+hoYCAAAAAAQE
        BEEEBARHAwMDVAICAqIEBAQ/AgICgAICAnAEBARBZWtrAkNHRwRAREQEQEREBEBERANAREQDQEREBEBE
        RAR+hoYCBAQEQwIDA2kREhIPBgYGKwIDA2YCAgJvAgMDZgMDA1YDBARJBAQEQgQEBEAEBAREAwMDTwUF
        BTMAAAAAAwQESQQEBEADAwNYAgICkgcICCMCAwNrBwcHJAICApEDBARJnKamAkBERARAREQEQEREA0BE
        RAM/Q0MEucTEAQUFBTACAgJuERISD2hubgKYoaECUFVVAw8QEBAHBwckBQUFNwQEBEQDBARLAwMDTQME
        BEkEBARACAgIICQmJgcCAgJsBgYGKQICAnICAgJ8CgsLGQIDA2UICAggAgICbwICAoYFBgYvucTEAT9D
        QwRAREQDQEREA1ddXQMNDQ0UAgICcwkJCR2IkZECP0NDBEBERARAREQESk9PA3qCggL///8B////AP//
        /wD///8A////AP///wAAAAAABQYGLgMDA2QDBARMAgMDagICAmwVFhYMAgMDawYGBisCAgJtBgcHJwIC
        AnQMDQ0UWF1dA0BERANAREQDfYSEAgMDA1cEBARE////AT9DQwRAREQEP0NDBFBVVQP///8A////AHZ9
        fQJnbm4CYmhoA0ZKSgRAREQEQEREBP///wADAwNRAwMDVQIDA2wDAwNRAwQETAkJCRwCAgJvAgMDaAQE
        BD8AAAAABAQERAMDA1d+hYUCQEREA5KbmwEJCgobAgICcBkbGwr///8A////Af///wD///8BDQ4OEgMD
        A00EBARCBwgIIgkJCR0JCQkcGhsbCszY2AFJTk4D////AAMDA04CAgKFBAQERgIDA2oJCQkdAwMDVgID
        A2sDAwNfSExMA0xRUQMXGBgLAgICbwkKChuFjY0BAAAAAAMDA08EBAREDAwMFQUFBTcEBQU7AwQESQYG
        BikGBgYpAgICpwMDA10CAgKBAgIClQICAngCAgKOAwQERxkbGwr///8ABgcHJwECArEEBARHAgMDZwYH
        BygCAgJsAwMDUQQEBD3///8AQENDBP///wAEBARFAwMDTwAAAAAUFhYJAgICbgsMDBYGBgYtAgICpAMD
        A1sEBARFAgICbgICAoECAgJ2BAUFOQ8QEBAGBgYrAwMDUQMDA1cDAwNWAgICaRAREQ89QEAEAwMDVAMD
        A1UDAwNWAwMDXgUGBi8EBAQ8AwMDUv///wFAREQEWV9fAwoLCxgCAgJuFRcXCQUGBiECAwNqMDMzBWNp
        aQIDAwNiAgICgg8QEBAJCgoaBAQERVBVVQMrLi4GT1RUA////wADAwNeBwgIIwAAAAADAwNTAwMDYJqk
        pAL///8ABQUFNwMDA2ACAgJsEhMTDgwNDRQCAgJsEBEREExRUQNBRUUELzIyBQIDA2sGBgYiAwMDPQMD
        A1YAAAAADxAQEQICAoEDAwNWEhMTDgQEBDwCAgJ5CgsLGf///wD///8BmqOjAgwMDBUjJSUHCwwMFgIC
        Am4EBQU6////AX+HhwIHBwckAgICeQIDA2sjJSUHS1BQAwoLCxkYGhoKRktLBEBERAT///8BAwMDVgMD
        Az0CAgJRBAQERAAAAAAFBQU0AgICjgICAm4CAgJvAgMDaAMDA1oCAgKVAwMDXAQFBTcHBwckBgcHJgME
        BEoCAgJ0BAUFOwcHByUJCgobV1xcAxgZGQoCAgKDAgICgSgqKgZBRUUEYWdnA0dLSwNAREQEQEREBP//
        /wAEBAREAgMDUQICAloEBQU6////ACUoKAceICAIFRYWDA0ODhMvMTEFAwQESwICApwCAgKZAgICcQMD
        A2MDAwNjAwQESA4ODhILCwsXAgICiwICAnUeICAI////AAMDA08BAgKpFxgYC0dLSwNAREQEQEREBEBE
        RARAREQE////AQQFBToCAgJaAgICWgQFBTr///8BQkZGBENHRwRFSUkETlNTA01SUgMSExMOCAkJHRAR
        EQ98hIQCYGVlA7zHxwEQEREPAwMDUwMEBEsDAwNhAwQESTc6OgVTWVkDDg8PEQICApMHCAghcHd3AkBE
        RARAREQEQEREBEBERAT///8BBAUFOgICAloCAgJQBAQEQv///wBAREQEQEREBEBERARESEgET1RUA2Np
        aQJ4f38CTVJSA0BERARAREQE////AQMDA1MDAwNSAgICbQYHByf///8BQ0dHBEBERAR/hoYCBQUFNggJ
        CR5sc3MCQEREBEBERARAREQEQEREBP///wAEBARCAgMDUAMDAzwDAwNT////AUNHRwSOl5cCqrW1ARgZ
        GQoMDQ0UDAwMFRUWFgx6goICk5ycAkFFRQSyvb0BBAQEPQICAm4CAgJwCgoKGnyEhAL9//8BZWtrAhka
        GgoTFRUNGRsbClthYQP+//8BSk5OA0BERARAREQE////AQMDA1MDAwM8BQYGIQIDA2aGj48CJikpBgYH
        BygDAwNaAgICbwICAmwCAwNrAgICbgMDA18GBgYqOz8/BP///wBCRkYEBwcHJAsLCxcAAAAAERMTDgQF
        BTgDAwNiAgICbgICAm0CAgJtAwMDYwQFBTkSExMN////AV1jYwMzNjYFAgMDZwYGBiEVFhYJAgICbwMD
        A00CAgJsAgMDaQQFBTkNDQ0UHyEhCCEjIwcPEBARBQUFMwIDA2oCAwNnBAQEPAcHByMICQkeBQYGLgMD
        A1QCAgJyAwMDXAYGBiwNDg4SFBUVDA4PDxIGBgYrAwMDWwICAnMDBARMCwsLFwsMDBYCAwNsFRYWCQAA
        AAADAwNWAgICgAgICCA1ODgF////AVBVVQNCRkYEQUVFBEtQUAP0//8BJyoqBgYGBioDAwNSAwMDYgID
        A2UDAwNcBAQEPgwNDRSfqKgCq7a2AU1SUgNFSUkETFFRA6OtrQKbpaUCCwwMFwMEBEoCAgJwAgICgQMD
        A08AAAAAm6SkAQkJCRwCAgJsHR4eCUpOTgNAREQEQEREBEBERARAREQEQEREBEBERARDR0cElZ+fAv//
        /wFcYmIDSU1NA73IyAH///8BU1hYA0BERARAREQEQEREBEBERARAREQEQEREBEBERARYXl4D////AAwN
        DRQCAgKECQkJHY2WlgFAREQDb3Z2AgMDA1oEBARC////AT9DQwRAREQEQEREBEBERARAREQEQEREBEBE
        RARAREQEQEREBEBERARAREQEQEREBEBERARAREQEQEREBEBERARAREQEQEREBEBERARAREQEQEREBD9D
        QwT///8BBAQEQgMDA1hxeXkCQEREA0BERANaYGADDA0NFQICAnMJCgoa////AWFnZwNiaGgDYmhoA2Jo
        aANiaGgDYmhoA2JoaANiaGgDYmhoA11jYwNESEgEP0NDBE1SUgNjaWkCYmhoA2JoaANiaWkDWmBgA0JG
        RgRLUFAD////AQkKChsCAgJ0DAwMFVtgYANAREQDQEREAz9DQwT///8BBAQEPAICAnwHCAgiCQkJHQkJ
        CR0JCQkdCQkJHQkJCR0JCQkdCQkJHQkJCR0JCQkdCQoKGx8hIQhLUFADDxAQEAgJCR0JCQkdCQkJHQgJ
        CR0KCwsZKy4uBhESEg8HCAgiAgICfQQEBDv///8BP0NDBEBERANAREQDRkpKBBkbGwoCAwNoAgICggID
        A2oCAwNmAgMDZgIDA2YCAwNmAgMDZgIDA2YCAwNmAgMDZgIDA2YDAwNdDg8PEgAAAAAFBQUzAgMDZwID
        A2YCAwNmAgMDZwMDA1cdHx8JBQYGLgIDA2wCAgKBAgMDZRsdHQlFSUkEQEREA0BERANITU0DFBUVDQIC
        AnYDAwNeAwMDWQMDA1kDAwNZAwMDWQMDA1kDAwNZAwMDWQMDA1kDAwNZAwMDWQMDA1kDAwNYAwMDWAMD
        A1kDAwNZAwMDWQMDA1kDAwNZAwMDWQMDA1gDAwNZAwMDWQMDA14CAgJ0FRYWDEdLSwNAREQDQEREA0BE
        RAROU1MDCwsLFwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUF
        BTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFMwUFBTMFBQUzBQUFMwsMDBZOU1MDQEREBEBE
        RANAREQDQEREBD9DQwRcYmID7Pr6Afb//wH1//8B9P//AfT//wH0//8B9f//AfX//wH0//8B9P//AfT/
        /wH1//8B9f//AfT//wH0//8B9P//AfX//wH1//8B9P//AfT//wH0//8B9f//Afb//wHr+voBWmBgAz9D
        QwRAREQEQEREA0BERAJAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDQEREA0BERANAREQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>